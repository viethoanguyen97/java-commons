package com.hovispace.javacommons.facebooksdk.service.facebook;

import com.facebook.ads.sdk.APIContext;
import com.facebook.ads.sdk.APIException;
import com.facebook.ads.sdk.User;
import org.springframework.core.env.Environment;
import org.springframework.stereotype.Component;

import static com.google.common.base.Preconditions.checkNotNull;

/**
 * Reference:
 * https://developers.facebook.com/docs/facebook-login/access-tokens/refreshing#generate-long-lived-token
 * https://developers.facebook.com/docs/pages/access-tokens
 *
 * Short-lived User access tokens are valid for one hour.
 * Long-lived User access tokens are valid for 60 days.
 * Short-lived Page access tokens are valid for one hour.
 * Long-lived Page access tokens are have no expiration date.
 */
@Component
public class FacebookAccessTokenService {

    private String _appId;
    private String _appSecret;
    private Boolean _enableDebug;

    public FacebookAccessTokenService(Environment environment) {
        _appId = checkNotNull(environment.getProperty("facebook.appId"));
        _appSecret = checkNotNull(environment.getProperty("facebook.appSecret"));
        _enableDebug = Boolean.valueOf(checkNotNull(environment.getProperty("facebook.enableDebug")));
    }

    public void retrieveLongLiveUserToken(String shortLivedUserToken) {

    }

    /**
     * To get a Page access token, you will need a User access token. This User access token must be generated by a person who can perform the action on the Page.
     * For example, to moderate comments the person must be able to MODERATE the Page.
     *
     * If you used a short-lived User access token, the Page access token is valid for only 1 hour.
     * If you used a long-lived User access token, the Page access token has no expiration date.
     * @param userId
     * @param userAccessToken
     *
     */
    public String retrievePageAccessToken(String userId, String pageId, String userAccessToken) throws APIException {
        //TODO: the process of getting facebook access token should be reviewed again
        APIContext apiContext = new APIContext(userAccessToken, _appSecret, _appId);
        User user = new User(userId, apiContext).createAccessToken().execute();

        return "";
    }
}
